openapi: 3.0.3
info:
  title: 车辆咨询服务
  description: 二手车估值服务
  version: 1.0.0
  contact:
    name: chaoxin.lu

servers:
  - url: https://openapi.pistonint.com
    description: 生产环境

paths:
  /evaluate:
    post:
      tags:
        - 估值服务
      summary: 二手车估值（新）
      description: 获取二手车估值信息
      operationId: usedCarValuation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValuationRequest'
            example:
              datas:
                - trimId: "tri26673"
                  mileage: 2.26
                  cityId: "cit00810"
                  regTime: "20220101"
                  colorId: "Col01"
      responses:
        '200':
          description: 成功响应
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValuationResponse'
              example:
                code: 0
                msg: "success"
                data:
                  - msrp: 231900
                    checker:
                      checkLevel: "normal"
                      checkMsg: "配置缺失正常|品牌检查正常。|Model检查正常。|OEM检查正常。||正常|增量线性模型预测正常。|价差调用成功"
                      status: 1
                    nprice: 0.0
                    sell:
                      valueA: 153600
                      valueB: 142800
                      valueC: 132800
                      valuePctA: 0.66
                      valuePctB: 0.62
                      valuePctC: 0.57
                    buy:
                      valueA: 153600
                      valueB: 142800
                      valueC: 132800
                      valuePctA: 0.66
                      valuePctB: 0.62
                      valuePctC: 0.57
                reqId: "req_123456"
                took: 42
      security:
        - OAuth2: [ ]

components:
  schemas:
    ValuationRequest:
      type: object
      properties:
        datas:
          type: array
          description: 估值数据
          maxItems: 500
          items:
            type: object
            required:
              - trimId
              - mileage
              - cityId
              - regTime
            properties:
              trimId:
                type: string
                description: 型号ID
              mileage:
                type: number
                format: double
                description: 里程（单位：万公里）
              cityId:
                type: string
                description: 城市ID
              regTime:
                type: string
                pattern: '^\d{8}$'
                description: 上牌时间(yyyyMMdd)
              colorId:
                type: string
                description: 颜色ID
                nullable: true
    ValuationResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        msg:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/ValuationData'
        reqId:
          type: string
        took:
          type: integer
          format: int64
    ValuationData:
      type: object
      properties:
        msrp:
          type: number
          format: double
        checker:
          $ref: '#/components/schemas/CheckResult'
        nprice:
          type: number
          format: double
        sell:
          $ref: '#/components/schemas/PriceInfo'
        buy:
          $ref: '#/components/schemas/PriceInfo'
    CheckResult:
      type: object
      properties:
        checkLevel:
          type: string
          enum: [ CRITICAL, ERROR, WARNING, NORMAL, NONE ]
        checkMsg:
          type: string
        status:
          type: integer
          format: int32
    PriceInfo:
      type: object
      properties:
        valueA:
          type: number
          format: double
        valueB:
          type: number
          format: double
        valueC:
          type: number
          format: double
        valuePctA:
          type: number
          format: double
        valuePctB:
          type: number
          format: double
        valuePctC:
          type: number
          format: double
  securitySchemes:
    OAuth2:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: OAuth2认证